{"version":3,"sources":["components/Filter/style.module.css","components/ContactList/style.module.css","App.module.css","components/ContactForm/ContactForm.js","components/Filter/Filter.js","components/ContactList/ContactList.js","App.js","reportWebVitals.js","index.js","components/ContactForm/style.module.css"],"names":["module","exports","ContactsForm","props","state","name","number","addContact","bind","field","event","setState","target","value","this","onAddContact","className","s","label","onChange","handleChange","type","pattern","title","required","submit","onClick","React","Component","Filter","ContactList","records","map","contact","delete","onDeleteContact","id","initialContacts","App","contacts","filter","deleteContact","handleFilterChange","JSON","parse","localStorage","getItem","newContact","nanoid","find","c","toLocaleLowerCase","alert","setContacts","concat","setItem","stringify","length","toLowerCase","includes","main","ContactForm","filteredContacts","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.f686a923.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"label\":\"style_label__2qgOM\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"delete\":\"style_delete__3BRPk\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"main\":\"App_main__3ZkGI\"};","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport s from \"./style.module.css\";\n\nclass ContactsForm extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      name: \"\",\n      number: \"\",\n    };\n    this.addContact = this.addContact.bind(this);\n  }\n\n  handleChange(field) {\n    return (event) =>\n      this.setState({ ...this.state, [field]: event.target.value });\n  }\n\n  addContact() {\n    this.setState({ name: \"\", number: \"\" });\n    this.props.onAddContact(this.state);\n  }\n\n  render() {\n    return (\n      <>\n        <label className={s.label}>Name</label>\n        <input\n          value={this.state.name}\n          onChange={this.handleChange(\"name\")}\n          type=\"text\"\n          name=\"name\"\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n          required\n        />\n        <label className={s.label}>Number</label>\n        <input\n          value={this.state.number}\n          onChange={this.handleChange(\"number\")}\n          type=\"tel\"\n          name=\"number\"\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n          title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\n          required\n        />\n        <button className={s.submit} onClick={this.addContact}>\n          Add contact\n        </button>\n      </>\n    );\n  }\n}\n\nContactsForm.propTypes = {\n  onAddContact: PropTypes.func.isRequired,\n};\n\nexport default ContactsForm;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport s from \"./style.module.css\";\n\nclass Filter extends React.Component {\n  render() {\n    return (\n      <>\n        <label className={s.label}>Find contact by name</label>\n        <input\n          value={this.props.value}\n          onChange={this.props.onChange}\n          type=\"text\"\n          name=\"filter\"\n        />\n      </>\n    );\n  }\n}\n\nFilter.propTypes = {\n  value: PropTypes.string.isRequired,\n  onChange: PropTypes.func.isRequired,\n};\n\nexport default Filter;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport s from \"./style.module.css\";\n\nclass ContactList extends React.Component {\n  render() {\n    return (\n      <>\n        <ul>\n          {this.props.records.map((contact) => (\n            <li key={contact.number}>\n              {contact.name} {contact.number}\n              <button\n                className={s.delete}\n                onClick={() => this.props.onDeleteContact(contact.id)}\n              >\n                Delete\n              </button>\n            </li>\n          ))}\n        </ul>\n      </>\n    );\n  }\n}\n\nContactList.propTypes = {\n  records: PropTypes.arrayOf(\n    PropTypes.shape({\n      name: PropTypes.string.isRequired,\n      number: PropTypes.string.isRequired,\n    })\n  ).isRequired,\n  onDeleteContact: PropTypes.func.isRequired,\n};\n\nexport default ContactList;\n","import React from \"react\";\nimport { nanoid } from \"nanoid\";\nimport ContactForm from \"./components/ContactForm\";\nimport Filter from \"./components/Filter\";\nimport ContactList from \"./components/ContactList\";\nimport s from \"./App.module.css\";\n\nconst initialContacts = [\n  { id: \"id-1\", name: \"Rosie Simpson\", number: \"459-12-56\" },\n  { id: \"id-2\", name: \"Hermione Kline\", number: \"443-89-12\" },\n  { id: \"id-3\", name: \"Eden Clements\", number: \"645-17-79\" },\n  { id: \"id-4\", name: \"Annie Copeland\", number: \"227-91-26\" },\n];\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      contacts: [],\n      filter: \"\",\n      name: \"\",\n      number: \"\",\n    };\n    this.addContact = this.addContact.bind(this);\n    this.deleteContact = this.deleteContact.bind(this);\n    this.handleFilterChange = this.handleFilterChange.bind(this);\n  }\n\n  componentDidMount() {\n    this.setState({\n      ...this.state,\n      contacts: JSON.parse(localStorage.getItem(\"contacts\")) || initialContacts,\n    });\n  }\n\n  handleFilterChange(event) {\n    this.setState({ ...this.state, filter: event.target.value });\n  }\n\n  addContact({ name, number }) {\n    const newContact = {\n      id: nanoid(),\n      name,\n      number,\n    };\n\n    if (\n      this.state.contacts.find(\n        (c) => c.name.toLocaleLowerCase() === name.toLocaleLowerCase()\n      )\n    ) {\n      alert(`${name} is already in contacts.`);\n      return\n    }\n\n    this.setContacts(this.state.contacts.concat(newContact));\n  }\n\n  deleteContact(id) {\n    this.setContacts(this.state.contacts.filter((c) => c.id !== id));\n  }\n\n  setContacts(contacts) {\n    this.setState({ ...this.state, contacts });\n    localStorage.setItem(\"contacts\", JSON.stringify(contacts));\n  }\n\n  filteredContacts() {\n    if (this.state.filter.length === 0) return this.state.contacts;\n\n    return this.state.contacts.filter((contact) =>\n      contact.name.toLowerCase().includes(this.state.filter.toLocaleLowerCase())\n    );\n  }\n\n  render() {\n    return (\n      <div className={s.main}>\n        <h1>Phonebook</h1>\n        <ContactForm onAddContact={this.addContact} />\n        <h2>Contacts</h2>\n        <Filter value={this.state.filter} onChange={this.handleFilterChange} />\n        <ContactList\n          records={this.filteredContacts()}\n          onDeleteContact={this.deleteContact}\n        />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"label\":\"style_label__2bp3J\",\"submit\":\"style_submit__26yDc\"};"],"sourceRoot":""}